services:
  backend:
    container_name: backend
    build:
      context: .
      dockerfile: backend/Dockerfile
    working_dir: /app
    ports:
      - "8000:8000"
    networks:
      - app_network
    volumes:
      - ./backend:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    env_file:
      - backend/.env
    depends_on:
      - database
    command: >
      bash -c "
        poetry run python manage.py migrate &&
        poetry run python manage.py loaddata fixtures/data.json &&
        poetry run python manage.py runserver 0.0.0.0:8000
      "

  frontend:
    container_name: frontend
    ports:
      - "3000:3000"
    build:
      context: .
      dockerfile: frontend/Dockerfile
    volumes:
      - ./frontend:/app
    networks:
      - app_network
    expose:
      - "80"

  database:
    container_name: database
    image: postgres:13
    networks:
      - app_network
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: always
    env_file:
      - backend/.env

volumes:
  postgres_data:
  static_volume:
  media_volume:

networks:
  app_network:
    driver: bridge
