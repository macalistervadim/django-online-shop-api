services:
  gunicorn:
    build:
      context: ../../
      dockerfile: infra/docker/Dockerfile
    working_dir: /app/backend
    volumes:
      - ./staticfiles:/app/backend/src/staticfiles
      - ./media:/app/backend/src/media
    ports:
      - "8000:8000"
    networks:
      - app_network
    env_file:
      - ../../.env.prod
    command: >
      bash -c "
        cd /app &&
        uv pip install -e . &&
        cd backend &&
        uv run gunicorn backend.config.wsgi:application --bind 0.0.0.0:8000 --workers 2 --timeout 120
      "

  daphne:
    build:
      context: ../../
      dockerfile: infra/docker/Dockerfile
    working_dir: /app/backend
    ports:
      - "8001:8001"
    networks:
      - app_network
    env_file:
      - ../../.env.prod
    command: >
      bash -c "
        cd /app &&
        uv pip install -e . &&
        cd backend &&
        uv run daphne -b 0.0.0.0 -p 8001 backend.config.asgi:application
      "
    depends_on:
      - redis
      - database

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/www/api/django-online-shop-api/infra/nginx/online-shop.conf:/etc/nginx/conf.d/online-shop.conf
      - /var/www/api/django-online-shop-api/infra/docker/staticfiles:/app/backend/src/staticfiles
      - /var/www/api/django-online-shop-api/infra/docker/media:/app/backend/src/media
      - /var/www/api/django-online-shop-api/infra/docker/certs:/etc/letsencrypt:ro
      - /var/www/api/django-online-shop-api/certbot-www:/var/www/api/django-online-shop-api/certbot
    depends_on:
      - gunicorn
      - daphne
    networks:
      - app_network

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - /var/www/api/django-online-shop-api/infra/docker/certs:/etc/letsencrypt
      - /var/www/api/django-online-shop-api/certbot-www:/var/www/api/django-online-shop-api/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    networks:
      - app_network

  database:
    image: postgres:13
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    restart: always
    env_file:
      - ../../.env.prod
    networks:
      - app_network

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    networks:
      - app_network

networks:
  app_network:
    driver: bridge

volumes:
  postgres_data:
